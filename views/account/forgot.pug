- var bodyClass="reset";
include ../partials/header

.reset
    h1.title
        | Hello
        if user.username
            | , #{user.username}
        else if user.profile.firstName
            | , #{user.profile.firstName}
        else if user.email
            | , #{user.email}

    h2.instructions="Please enter your new password"

    .form
        form(method="POST", action="/v1/auth/forgot-password/reset/?token=" + token)
            input(type='hidden', name='_method', value="PATCH")

            .form-group
                label(for='password') New password
                input.form-control(type='password', name='password', id='password', placeholder='Password', autofocus)
                p.help-block

            .form-group
                label(for='password-confirm') Confirm new password
                input.form-control(type='password', name='password-confirm', id='password-confirm', placeholder='Confirm password')
                p.help-block

            .form-group.submit-form
                button.btn-submit(type='submit', disabled)="Reset Password"

include ../partials/footer

script(type="text/javascript").
    $(function() {
        var validations = !{JSON.stringify(validations).replace(/<\//g, "<\\/")}

        const submitButton = $("button.btn-submit");

        $("input[type='password']").on("change, keyup", function () {
            if ( ! validateLengths() || ! validatePasswords() ) {
                submitButton.prop("disabled", true);
            }
            else {
                submitButton.prop("disabled", false);
            }
        });

        $("form").on("submit", function (e) {
            var validationSuccess = validateLengths();

            if ( validationSuccess ) {
                validationSuccess = validatePasswords();
            }

            if ( ! validationSuccess ) {
                e.preventDefault();
            }
        });

        function validateLengths() {
            const passwordField = $("input[name='password']");
            const passwordHelp = passwordField.siblings(".help-block");
            const passwordParent = passwordField.parent();
            const passwordConfirmField = $("input[name='password-confirm']");

            const password = passwordField.val();
            const passwordConfirm = passwordConfirmField.val();

            if ( ! password || ! passwordConfirm ) {
                return false;
            }

            console.log("Is too short", password.length < validations.password.minLength);
            console.log("Is too long", password.length > validations.password.maxLength);

            if ( password.length < validations.password.minLength ) {
                passwordParent.addClass("has-error");
                passwordHelp.text("Password is too short");

                return false;
            }
            else if (password.length > validations.password.maxLength) {
                passwordParent.addClass("has-error");
                passwordHelp.text("Password is too long");

                return false;
            }
            else {
                passwordParent.removeClass("has-error");
                passwordHelp.text("");

                return true;
            }
        }

        function validatePasswords() {
            const passwordField = $("input[name='password']");

            const passwordConfirmField = $("input[name='password-confirm']");
            const passwordConfirmHelp = passwordConfirmField.siblings(".help-block");
            const passwordConfirmParent = passwordConfirmField.parent();

            const password = passwordField.val();
            const passwordConfirm = passwordConfirmField.val();

            if ( ! password || ! passwordConfirm ) {
                return false;
            }

            if ( password !== passwordConfirm ) {
                passwordConfirmParent.addClass("has-error");
                passwordConfirmHelp.text("Password doesn't match");

                return false;
            }
            else {
                passwordConfirmParent.removeClass("has-error");
                passwordConfirmHelp.text("");

                return true;
            }
        }
    })